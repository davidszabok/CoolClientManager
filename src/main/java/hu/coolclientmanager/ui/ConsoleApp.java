package hu.coolclientmanager.ui;

import hu.coolclientmanager.model.Address;
import hu.coolclientmanager.model.Customer;
import hu.coolclientmanager.repository.CustomerRepository;
import hu.coolclientmanager.repository.DatabaseInitializer;

import java.util.List;
import java.util.Scanner;

public class ConsoleApp {

    private final CustomerRepository customerRepository = new CustomerRepository();
    private final Scanner scanner = new Scanner(System.in);

    public ConsoleApp() {
        DatabaseInitializer.initializeDatabase(); // Adatb√°zis inicializ√°l√°s
    }

    public void start() {
        boolean running = true;
        while (running) {
            System.out.println("\n√údv a CoolClientManager-ben! V√°lassz egy m≈±veletet:");
            System.out.println("1 - √úgyf√©l hozz√°ad√°sa");
            System.out.println("2 - √úgyfelek list√°z√°sa");
            System.out.println("3 - √úgyf√©l t√∂rl√©se");
            System.out.println("0 - Kil√©p√©s");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Enter kezel√©s

            switch (choice) {
                case 1 -> addCustomer();
                case 2 -> listCustomers();
                case 3 -> deleteCustomer();
                case 0 -> running = false;
                default -> System.out.println("√ârv√©nytelen v√°laszt√°s, pr√≥b√°ld √∫jra.");
            }
        }
    }

    private void addCustomer() {
        System.out.print("C√©g neve: ");
        String name = scanner.nextLine();

        System.out.print("Ad√≥sz√°m: ");
        String taxNumber = scanner.nextLine();

        System.out.print("V√°ros: ");
        String town = scanner.nextLine();

        System.out.print("Utca: ");
        String street = scanner.nextLine();

        System.out.print("H√°zsz√°m: ");
        String number = scanner.nextLine(); // Most m√°r String form√°tum√∫

        Address address = new Address(town, street, number);
        Customer customer = new Customer(0, name, taxNumber, address);

        customerRepository.saveCustomer(customer);
        System.out.println("‚úÖ √úgyf√©l elmentve az adatb√°zisba!");
    }

    private void listCustomers() {
        List<Customer> customers = customerRepository.loadCustomers();
        System.out.println("\nüìã √úgyfelek list√°ja:");
        for (Customer customer : customers) {
            System.out.println(customer.getId() + " - " + customer.getCompanyName() + " | Ad√≥sz√°m: " + customer.getTaxNumber());
        }
    }

    private void deleteCustomer() {
        System.out.print("T√∂rlend≈ë √ºgyf√©l ID: ");
        long id = scanner.nextLong();
        scanner.nextLine(); // Enter kezel√©s

        customerRepository.deleteCustomer(id);

    }

    public static void main(String[] args) {
        new ConsoleApp().start();
    }
}